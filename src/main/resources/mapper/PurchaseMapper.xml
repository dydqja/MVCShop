<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.side.mvcshop.purchase.PurchaseDao">

    <resultMap id="purchaseSelectMap" type="com.side.mvcshop.purchase.Purchase">
        <result      property="tranNo"         column="tran_no"           jdbcType="INTEGER" />
        <result      property="paymentOption"  column="payment_option"    jdbcType="CHAR" />
        <result      property="receiverName"   column="receiver_name"     jdbcType="VARCHAR" />
        <result      property="receiverPhone"  column="receiver_phone"    jdbcType="VARCHAR" />
        <result      property="dlvyAddr"       column="dlvy_addr"         jdbcType="VARCHAR" />
        <result      property="dlvyRequest"    column="dlvy_request"      jdbcType="VARCHAR" />
        <result      property="tranCode"       column="tran_status_code"  jdbcType="CHAR" />
        <result      property="orderDate"      column="order_date"        jdbcType="DATE" />
        <result      property="dlvyDate"       column="dlvy_date"         jdbcType="VARCHAR" />
        <association property="purchaseProd"   column="PROD_NO" 		  javaType="com.side.mvcshop.product.Product" 	select="selectProduct" />
        <association property="buyer" 		   column="BUYER_ID" 		  javaType="com.side.mvcshop.user.User" 	    select="selectUser" />
    </resultMap>


<!--    purchaseProd와 매핑하기 위한 부분-->
    <select id="selectProduct" resultType="com.side.mvcshop.product.Product">
        SELECT p1.prod_no prodNo, p1.prod_name prodName, p1.prod_detail prodDetail, p1.manufacture_day manuDate, p1.price, p1.image_file fileName, p1.reg_date regDate,
               t1.TRAN_STATUS_CODE tranCode
        FROM product p1
        LEFT JOIN transaction t1 ON p1.prod_no = t1.prod_no
        WHERE p1.prod_no = #{value}
    </select>

<!--    buyer와 매핑하기 위한 부분-->
    <select id="selectUser" resultType="com.side.mvcshop.user.User">
        SELECT user_id userId, user_name userName, password, role, ssn, cell_phone phone, addr, email, reg_date regDate
        FROM users
        WHERE user_id = #{value}
    </select>

    <insert id="addPurchase" parameterType="com.side.mvcshop.purchase.Purchase">
        INSERT
        INTO transaction ( prod_no, buyer_id, payment_option, receiver_name, receiver_phone,
                           dlvy_addr, dlvy_request, tran_status_code, dlvy_date )
        VALUES           ( #{purchaseProd.prodNo}, #{buyer.userId}, #{paymentOption}, #{receiverName}, #{receiverPhone},
                           #{dlvyAddr}, #{dlvyRequest}, #{tranCode}, #{dlvyDate} )
    </insert>

    <select id="getList" parameterType="com.side.mvcshop.common.Search" resultMap="purchaseSelectMap">
        SELECT buyer_id, prod_no, dlvy_addr, receiver_name, receiver_phone, tran_status_code
        FROM transaction
        ORDER BY tran_no limit #{startNum},#{endNum};
    </select>

    <select id="getTotalCount" parameterType="com.side.mvcshop.common.Search" resultType="int">
        SELECT COUNT(*)
        FROM ( SELECT buyer_id, receiver_name, receiver_phone, tran_status_code
               FROM transaction
             ) countTable
    </select>

    <select id="getSaleList" parameterType="com.side.mvcshop.common.Search" resultMap="purchaseSelectMap">
        SELECT product.prod_no, tran_status_code
        FROM product
        LEFT JOIN transaction on product.prod_no = transaction.prod_no
        <if test="searchCondition != null">
            <where>
                <if test="searchCondition == 0 and searchKeyword !='' ">
                    prod_name like CONCAT('%', #{searchKeyword}, '%')
                </if>
                <if test="searchCondition == 1 and searchKeyword !='' ">
                    tran_status_code like CONCAT('%', #{searchKeyword}, '%')
                </if>
            </where>
        </if>
        ORDER BY product.prod_no limit #{startNum},#{endNum};

    </select>

    <update id="updateTranCode" parameterType="java.util.Map">
        <choose>
            <when test="tranCode == '배송전'">
                UPDATE transaction
                SET tran_status_code = '배송중'
                WHERE prod_no = #{prodNo}
            </when>
            <when test="tranCode == '배송중'">
                UPDATE transaction
                SET tran_status_code = '배송완'
                WHERE prod_no = #{prodNo}
            </when>
        </choose>
    </update>

    <select id="getPurchase" parameterType="int" resultMap="purchaseSelectMap">
        SELECT *
        FROM transaction
        WHERE prod_no = #{prodNo}
    </select>


</mapper>
