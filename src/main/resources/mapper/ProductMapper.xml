<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.side.mvcshop.product.ProductDao">



	<resultMap id="productSelectMap" type="com.side.mvcshop.product.Product">
		<result property="prodNo" 		column="PROD_NO"			jdbcType="INTEGER" />
		<result property="prodName"		column="PROD_NAME" 			jdbcType="VARCHAR"/>
		<result property="prodDetail" 	column="PROD_DETAIL" 		jdbcType="VARCHAR"/>
		<result property="manuDate"		column="MANUFACTURE_DAY" 	jdbcType="VARCHAR"/>
		<result property="price" 		column="PRICE" 				jdbcType="INTEGER" />
		<result property="fileName"		column="IMAGE_FILE" 		jdbcType="VARCHAR"/>
		<result property="regDate" 		column="REG_DATE" 			jdbcType="TIMESTAMP"/>
	</resultMap>

	<!-- SQL : INSERT -->
	<insert 	id="addProduct"	parameterType="com.side.mvcshop.product.Product" >
	 	INSERT
		INTO product ( PROD_NAME, PROD_DETAIL, MANUFACTURE_DAY,
					   PRICE, IMAGE_FILE )
		VALUES		 ( #{prodName}, #{prodDetail}, #{manuDate},
				       #{price}, #{fileName} )
	 </insert>

	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="INTEGER" resultMap="productSelectMap">
		SELECT
		PROD_NO, PROD_NAME, IMAGE_FILE, PROD_DETAIL, MANUFACTURE_DAY, PRICE, REG_DATE
		FROM product
		WHERE prod_no = #{value}
	 </select>


 	 <update	id="updateProduct" parameterType="com.side.mvcshop.product.Product" >
	   	UPDATE product
	   	<set>
	   		PROD_NAME 		= #{prodName},
			PROD_DETAIL		= #{prodDetail},
			MANUFACTURE_DAY	= #{manuDate},
			PRICE			= #{price},
			IMAGE_FILE		= #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>



	<select  id="getList"  parameterType="com.side.mvcshop.common.Search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM ( SELECT PROD_NO, prod_name, IMAGE_FILE, PROD_DETAIL, MANUFACTURE_DAY, PRICE, REG_DATE,
	  	              ROW_NUMBER() OVER (ORDER BY prod_no) AS row_seq
	  	       FROM product
			       <if test="searchCondition != null">
					   <where>
						   <if test="searchCondition == 0 and searchKeyword !='' ">
	  	           			   prod_name like CONCAT('%', #{searchKeyword}, '%')
						   </if>
						   <if test="searchCondition == 1 and searchKeyword !='' ">
							   prod_no like CONCAT('%', #{searchKeyword}, '%')
						   </if>
					   </where>
				   </if>
			 ) AS inner_table
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	 </select>
	 	<!--  위 두번째 subQuery 의
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.

	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->

	<!-- SQL : SELECT ROW Count -->
  	 <select  id="getTotalCount"  parameterType="com.side.mvcshop.common.Search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT PROD_NAME, PRICE, MANUFACTURE_DAY
				FROM product
					<if test="searchCondition != null">
						<where>
							<if test="searchCondition == 0 and searchKeyword !='' ">
						 		prod_name like CONCAT('%', #{searchKeyword}, '%')
							</if>
					 	<if test="searchCondition == 1 and searchKeyword !='' ">
						 		prod_no like CONCAT('%', #{searchKeyword}, '%')
							</if>
						</where>
					</if> ) countTable
	 </select>

	 <!-- autoComplete 추가부분 -->
	 <select id="autoComplete" parameterType="map" resultType="map">
	 	SELECT PROD_NAME
	 	FROM product
		WHERE PROD_NAME LIKE CONCAT('%', #{value}, '%')
		ORDER BY PROD_NO
	 </select>

</mapper>
